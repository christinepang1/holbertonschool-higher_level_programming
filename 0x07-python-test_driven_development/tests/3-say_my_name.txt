The ``3-say_my_name`` module
======================

Using ``say_my_name``
-------------------

This is an example text file in reStructuredText format.  First import
``say_my_name`` from the ``3-say_my_name`` module:

>>> say_my_name = __import__("3-say_my_name").say_my_name

Now use it:

>>> say_my_name("Pokemon")
My name is Pokemon 

>>> say_my_name("Pokemon", "Go")
My name is Pokemon Go

>>> say_my_name("", "")
My name is  

>>> say_my_name(" ", "")
My name is   

>>> say_my_name(1, 2)
Traceback (most recent call last):
...
TypeError: first_name must be a string

>>> say_my_name("Bulbasaur", 2)
Traceback (most recent call last):
...
TypeError: last_name must be a string

>>> say_my_name((1, 2, 3), "Chansey")
Traceback (most recent call last):
...
TypeError: first_name must be a string

>>> say_my_name({1, 2}, "Seel")
Traceback (most recent call last):
...
TypeError: first_name must be a string

>>> say_my_name("Elekid", {1, 2})
Traceback (most recent call last):
...
TypeError: last_name must be a string

>>> say_my_name("Pichu", [1, 2])
Traceback (most recent call last):
...
TypeError: last_name must be a string

>>> say_my_name([1, 2], "Raichu")
Traceback (most recent call last):
...
TypeError: first_name must be a string

>>> say_my_name(True, False)
Traceback (most recent call last):
...
TypeError: first_name must be a string

>>> say_my_name("Ditto", False)
Traceback (most recent call last):
...
TypeError: last_name must be a string

>>> say_my_name("Sqirtle", True)
Traceback (most recent call last):
...
TypeError: last_name must be a string

>>> say_my_name(False, "Blastoise")
Traceback (most recent call last):
...
TypeError: first_name must be a string

>>> say_my_name()
Traceback (most recent call last):
...
TypeError: say_my_name() missing 1 required positional argument: 'first_name'

>>> say_my_name("Butterfree", "Charmander", "Beedrill")
Traceback (most recent call last):
...
TypeError: say_my_name() takes from 1 to 2 positional arguments but 3 were given
